---
import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import { gradients } from "../../components/styleMaps";
import Layout from "../../layouts/Layout.astro";
import Masthead from "../../components/Masthead.astro";
import airHustleHeroImage from "@images/air-hustle-hero@2x.png";
import settingsHeroImage from "@images/settings-hero@2x.png";
import roryImage from "@images/rory@2x.png";
import meImage from "@images/me@2x.png";
import andrewImage from "@images/andrew@2x.png";
import yihaoImage from "@images/yihao@2x.png";
import ellisImage from "@images/ellis@2x.png";
import type { ImageMetadata } from "astro";

interface TeamMember {
  name: string;
  position: string;
}

const teamMemberImages: Record<string, ImageMetadata> = {
  KC: meImage,
  Rory: roryImage,
  Andrew: andrewImage,
  Yihao: yihaoImage,
  Ellis: ellisImage,
};

const heroImages: Record<string, ImageMetadata> = {
  "Air Hustle": airHustleHeroImage,
  Settings: settingsHeroImage,
};

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const caseStudies = await getCollection("work", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  return caseStudies.map((caseStudy) => ({
    params: { title: caseStudy.data.slug },
    props: { caseStudy },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { caseStudy } = Astro.props;

const { Content } = await render(caseStudy);
const heroImage = heroImages[caseStudy.data.title];
const heroGradient =
  gradients[caseStudy.data.gradient as keyof typeof gradients] ??
  gradients.primary;
---

<Layout title={caseStudy.data.title} description={caseStudy.data.description}>
  <Masthead imgSrc={heroImage} heroGradient={heroGradient}>
    <h1
      class="font-bricolage text-5xl font-light -tracking-wide text-balance md:text-6xl md:tracking-[-0.03em] xl:text-8xl xl:tracking-[-0.045em]"
    >
      {caseStudy.data.headline}
    </h1>

    <div class="mt-6 flex items-start gap-10 md:mt-8 md:gap-32">
      <div class="space-y-1.5">
        <h2 class="font-medium text-slate-400 md:text-lg">Team</h2>
        <ul class="flex -space-x-0.5">
          {
            caseStudy.data.team?.map((member: TeamMember) => {
              return (
                <li class="cursor-help">
                  <Image
                    class="size-7 rounded-full"
                    data-tip={member.position}
                    src={teamMemberImages[member.name]}
                    alt={member.name}
                    densities={[1, 2]}
                    width={40}
                    height={40}
                    loading="eager"
                  />
                </li>
              );
            })
          }
        </ul>
      </div>
      <div class="space-y-1.5">
        <h2 class="font-medium text-slate-400 md:text-lg">My Role</h2>
        <p class="md:text-lg">{caseStudy.data.role}</p>
      </div>
      {
        caseStudy.data.timeframe && (
          <div class="space-y-1.5">
            <h2 class="font-medium text-slate-400 md:text-lg">Timeframe</h2>
            <p class="md:text-lg">6 weeks</p>
          </div>
        )
      }
    </div>
  </Masthead>

  <main
    class="mx-auto max-w-6xl px-8 pb-20 md:px-20 md:pb-32 xl:max-w-7xl xl:px-0 xl:pb-48"
  >
    <div
      class="prose prose-xl prose-cyan prose-ul:list-disc prose-ol:max-w-3xl prose-ul:max-w-3xl prose-p:max-w-3xl prose-p:text-pretty prose-headings:text-balance prose-headings:font-semibold prose-h3:text-xl prose-h3:md:text-2xl prose-h2:font-bricolage prose-h2:-tracking-[0.03em] xl:prose-headings:mx-16 xl:prose-p:mx-16 xl:prose-ul:mx-16 xl:prose-ol:mx-16 max-w-none"
    >
      <Content />
    </div>
  </main>
</Layout>
